{"ast":null,"code":"var _jsxFileName = \"/Users/heiwa.local/Desktop/Projects/test-task/test-task-ntprogress/client/src/pages/exchange/ui/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Layout } from \"antd\";\nimport { Content } from \"antd/es/layout/layout\";\nimport { Ticker } from \"../../../features\";\nimport { WSConnector } from \"../../../shared/api\";\nimport { Instrument } from \"../../../shared/enumes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ws = new WSConnector();\nexport const ExchangePage = () => {\n  _s();\n  const [isPaused, setIsPaused] = useState(false);\n\n  // const ws = useRef<WSConnector>()\n  const [status, setStatus] = useState(\"\");\n  const [data, setData] = useState();\n  useEffect(() => {\n    if (!isPaused) {\n      ws.connect();\n      console.log(\"connected\");\n      // ws.current = new WebSocket(\"ws://localhost:8080/ws/\");\n      // ws.onopen = () => setStatus(\"Open\")\n      // ws.current.onclose = () => setStatus(\"Close\")\n      // ws.current.onmessage = (message: any) => {setData(message)}\n    }\n\n    return () => {\n      console.log(\"disconnected\");\n      ws.disconnect();\n    };\n  }, [ws, isPaused]);\n  const getData = () => {\n    ws.subscribeMarketData(Instrument.eur_rub);\n    // ws.current?.send(JSON.stringify({\n    //     messageType: ClientMessageType.subscribeMarketData,\n    //     message: {\n    //         instrument: Instrument.eur_rub\n    //     } as SubscribeMarketData\n    // } as ClientEnvelope))\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: /*#__PURE__*/_jsxDEV(Ticker, {\n        buyCost: 1,\n        sellCost: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(ExchangePage, \"OxeTI/7GK+Q6m7wFmawz28d+bXM=\");\n_c = ExchangePage;\nvar _c;\n$RefreshReg$(_c, \"ExchangePage\");","map":{"version":3,"names":["React","useEffect","useState","Layout","Content","Ticker","WSConnector","Instrument","ws","ExchangePage","isPaused","setIsPaused","status","setStatus","data","setData","connect","console","log","disconnect","getData","subscribeMarketData","eur_rub"],"sources":["/Users/heiwa.local/Desktop/Projects/test-task/test-task-ntprogress/client/src/pages/exchange/ui/index.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Layout} from \"antd\";\nimport {Content} from \"antd/es/layout/layout\";\nimport {Ticker} from \"../../../features\";\nimport {WSConnector} from \"../../../shared/api\";\nimport {ServerEnvelope} from \"../../../shared/models\";\nimport {Instrument} from \"../../../shared/enumes\";\n\nconst ws = new WSConnector()\n\nexport const ExchangePage = () => {\n    const [isPaused, setIsPaused] = useState(false);\n\n    // const ws = useRef<WSConnector>()\n    const [status, setStatus] = useState(\"\");\n    const [data, setData] = useState<ServerEnvelope>()\n\n    useEffect(() => {\n        if (!isPaused) {\n            ws.connect()\n            console.log(\"connected\")\n            // ws.current = new WebSocket(\"ws://localhost:8080/ws/\");\n            // ws.onopen = () => setStatus(\"Open\")\n            // ws.current.onclose = () => setStatus(\"Close\")\n            // ws.current.onmessage = (message: any) => {setData(message)}\n        }\n        return () => {\n            console.log(\"disconnected\")\n            ws.disconnect()\n        }\n    }, [ws, isPaused])\n\n    const getData = () => {\n        ws.subscribeMarketData(\n            Instrument.eur_rub\n        )\n        // ws.current?.send(JSON.stringify({\n        //     messageType: ClientMessageType.subscribeMarketData,\n        //     message: {\n        //         instrument: Instrument.eur_rub\n        //     } as SubscribeMarketData\n        // } as ClientEnvelope))\n    }\n\n    return (\n        <Layout>\n            <Content>\n                <Ticker buyCost={1} sellCost={2}/>\n            </Content>\n        </Layout>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,MAAM,QAAO,MAAM;AAC3B,SAAQC,OAAO,QAAO,uBAAuB;AAC7C,SAAQC,MAAM,QAAO,mBAAmB;AACxC,SAAQC,WAAW,QAAO,qBAAqB;AAE/C,SAAQC,UAAU,QAAO,wBAAwB;AAAC;AAElD,MAAMC,EAAE,GAAG,IAAIF,WAAW,EAAE;AAE5B,OAAO,MAAMG,YAAY,GAAG,MAAM;EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACA,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,EAAkB;EAElDD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACS,QAAQ,EAAE;MACXF,EAAE,CAACQ,OAAO,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MACxB;MACA;MACA;MACA;IACJ;;IACA,OAAO,MAAM;MACTD,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3BV,EAAE,CAACW,UAAU,EAAE;IACnB,CAAC;EACL,CAAC,EAAE,CAACX,EAAE,EAAEE,QAAQ,CAAC,CAAC;EAElB,MAAMU,OAAO,GAAG,MAAM;IAClBZ,EAAE,CAACa,mBAAmB,CAClBd,UAAU,CAACe,OAAO,CACrB;IACD;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC;;EAED,oBACI,QAAC,MAAM;IAAA,uBACH,QAAC,OAAO;MAAA,uBACJ,QAAC,MAAM;QAAC,OAAO,EAAE,CAAE;QAAC,QAAQ,EAAE;MAAE;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA;EAC5B;IAAA;IAAA;IAAA;EAAA,QACL;AAEjB,CAAC;AAAC,GAzCWb,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}